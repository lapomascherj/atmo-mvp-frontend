import React from 'react';
import { X, Download, FileText, Calendar, Clock } from 'lucide-react';
import { Button } from '@/components/atoms/Button';

interface DocumentViewerProps {
  document: {
    id: string;
    title: string;
    content: string;
    createdAt: string;
    fileType: string;
  };
  onClose: () => void;
  onDownload?: () => void;
}

export const DocumentViewer: React.FC<DocumentViewerProps> = ({
  document,
  onClose,
  onDownload
}) => {
  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const formatFileSize = (content: string) => {
    const bytes = new Blob([content]).size;
    if (bytes < 1024) return `${bytes} B`;
    if (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(1)} KB`;
    return `${(bytes / (1024 * 1024)).toFixed(1)} MB`;
  };

  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4">
      <div className="bg-slate-900/95 backdrop-blur-xl border border-white/10 rounded-2xl shadow-2xl w-full max-w-4xl h-[80vh] flex flex-col overflow-hidden">
        {/* Header */}
        <div className="flex items-center justify-between p-6 border-b border-white/10">
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 rounded-lg bg-[#FF5F1F]/20 flex items-center justify-center">
              <FileText size={20} className="text-[#FF5F1F]" />
            </div>
            <div>
              <h2 className="text-xl font-semibold text-white truncate max-w-md">
                {document.title}
              </h2>
              <div className="flex items-center gap-4 text-sm text-white/60 mt-1">
                <div className="flex items-center gap-1">
                  <Calendar size={14} />
                  <span>{formatDate(document.createdAt)}</span>
                </div>
                <div className="flex items-center gap-1">
                  <Clock size={14} />
                  <span>{formatFileSize(document.content)}</span>
                </div>
                <span className="px-2 py-1 bg-white/10 rounded text-xs">
                  {document.fileType.toUpperCase()}
                </span>
              </div>
            </div>
          </div>
          
          <div className="flex items-center gap-2">
            {onDownload && (
              <Button
                onClick={onDownload}
                variant="ghost"
                size="sm"
                className="text-white/70 hover:text-white hover:bg-white/10"
              >
                <Download size={16} className="mr-2" />
                Download
              </Button>
            )}
            <Button
              onClick={onClose}
              variant="ghost"
              size="sm"
              className="text-white/70 hover:text-white hover:bg-white/10"
            >
              <X size={16} />
            </Button>
          </div>
        </div>

        {/* Content */}
        <div className="flex-1 overflow-y-auto p-6">
          <div className="prose prose-invert max-w-none">
            <div className="whitespace-pre-wrap text-white/90 leading-relaxed font-mono text-sm">
              {document.content}
            </div>
          </div>
        </div>

        {/* Footer */}
        <div className="p-6 border-t border-white/10 bg-slate-900/50">
          <div className="flex items-center justify-between text-sm text-white/50">
            <span>Strategy and Advanced Docs</span>
            <span>Generated by ATMO AI</span>
          </div>
        </div>
      </div>
    </div>
  );
};
